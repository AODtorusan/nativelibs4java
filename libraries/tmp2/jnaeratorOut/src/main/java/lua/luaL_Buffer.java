package lua;
import lua.LuaLibrary.lua_State;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : lauxlib.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("lua") 
public class luaL_Buffer extends StructObject {
	public luaL_Buffer() {
		super();
	}
	/**
	 * current position in buffer<br>
	 * C type : char*
	 */
	@Field(0) 
	public Pointer<Byte > p() {
		return this.io.getPointerField(this, 0);
	}
	/**
	 * current position in buffer<br>
	 * C type : char*
	 */
	@Field(0) 
	public luaL_Buffer p(Pointer<Byte > p) {
		this.io.setPointerField(this, 0, p);
		return this;
	}
	/// number of strings in the stack (level)
	@Field(1) 
	public int lvl() {
		return this.io.getIntField(this, 1);
	}
	/// number of strings in the stack (level)
	@Field(1) 
	public luaL_Buffer lvl(int lvl) {
		this.io.setIntField(this, 1, lvl);
		return this;
	}
	/// C type : lua_State*
	@Field(2) 
	public Pointer<lua_State > L() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : lua_State*
	@Field(2) 
	public luaL_Buffer L(Pointer<lua_State > L) {
		this.io.setPointerField(this, 2, L);
		return this;
	}
	/// C type : char[1024]
	@Array({1024}) 
	@Field(3) 
	public Pointer<Byte > buffer() {
		return this.io.getPointerField(this, 3);
	}
}

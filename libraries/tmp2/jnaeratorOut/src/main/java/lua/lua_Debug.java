package lua;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : lua.h:345</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("lua") 
public class lua_Debug extends StructObject {
	public lua_Debug() {
		super();
	}
	@Field(0) 
	public int event() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public lua_Debug event(int event) {
		this.io.setIntField(this, 0, event);
		return this;
	}
	/**
	 * (n)<br>
	 * C type : const char*
	 */
	@Field(1) 
	public Pointer<Byte > name() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * (n)<br>
	 * C type : const char*
	 */
	@Field(1) 
	public lua_Debug name(Pointer<Byte > name) {
		this.io.setPointerField(this, 1, name);
		return this;
	}
	/**
	 * (n) `global', `local', `field', `method'<br>
	 * C type : const char*
	 */
	@Field(2) 
	public Pointer<Byte > namewhat() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * (n) `global', `local', `field', `method'<br>
	 * C type : const char*
	 */
	@Field(2) 
	public lua_Debug namewhat(Pointer<Byte > namewhat) {
		this.io.setPointerField(this, 2, namewhat);
		return this;
	}
	/**
	 * (S) `Lua', `C', `main', `tail'<br>
	 * C type : const char*
	 */
	@Field(3) 
	public Pointer<Byte > what() {
		return this.io.getPointerField(this, 3);
	}
	/**
	 * (S) `Lua', `C', `main', `tail'<br>
	 * C type : const char*
	 */
	@Field(3) 
	public lua_Debug what(Pointer<Byte > what) {
		this.io.setPointerField(this, 3, what);
		return this;
	}
	/**
	 * (S)<br>
	 * C type : const char*
	 */
	@Field(4) 
	public Pointer<Byte > source() {
		return this.io.getPointerField(this, 4);
	}
	/**
	 * (S)<br>
	 * C type : const char*
	 */
	@Field(4) 
	public lua_Debug source(Pointer<Byte > source) {
		this.io.setPointerField(this, 4, source);
		return this;
	}
	/// (l)
	@Field(5) 
	public int currentline() {
		return this.io.getIntField(this, 5);
	}
	/// (l)
	@Field(5) 
	public lua_Debug currentline(int currentline) {
		this.io.setIntField(this, 5, currentline);
		return this;
	}
	/// (u) number of upvalues
	@Field(6) 
	public int nups() {
		return this.io.getIntField(this, 6);
	}
	/// (u) number of upvalues
	@Field(6) 
	public lua_Debug nups(int nups) {
		this.io.setIntField(this, 6, nups);
		return this;
	}
	/// (S)
	@Field(7) 
	public int linedefined() {
		return this.io.getIntField(this, 7);
	}
	/// (S)
	@Field(7) 
	public lua_Debug linedefined(int linedefined) {
		this.io.setIntField(this, 7, linedefined);
		return this;
	}
	/// (S)
	@Field(8) 
	public int lastlinedefined() {
		return this.io.getIntField(this, 8);
	}
	/// (S)
	@Field(8) 
	public lua_Debug lastlinedefined(int lastlinedefined) {
		this.io.setIntField(this, 8, lastlinedefined);
		return this;
	}
	/**
	 * (S)<br>
	 * C type : char[60]
	 */
	@Array({60}) 
	@Field(9) 
	public Pointer<Byte > short_src() {
		return this.io.getPointerField(this, 9);
	}
	/**
	 * private part<br>
	 * active function
	 */
	@Field(10) 
	public int i_ci() {
		return this.io.getIntField(this, 10);
	}
	/**
	 * private part<br>
	 * active function
	 */
	@Field(10) 
	public lua_Debug i_ci(int i_ci) {
		this.io.setIntField(this, 10, i_ci);
		return this;
	}
}
